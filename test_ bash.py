#!/usr/bin/env python3
"""
Converted from shell: test_ bash.sh
Generated by MCP Multi-Language to Python Converter
"""

import os
import sys
import subprocess
import logging
from pathlib import Path
from typing import Optional, List, Dict, Any

# Setup logging
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

import boto3
import logging
import sys
from botocore.exceptions import BotoCoreError, ClientError

# Set up logging
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def create_s3_bucket(bucket_name: str, region: str = "us-east-1") -> None:
    """
    Create an S3 bucket in a specified region.

    :param bucket_name: Name of the bucket to create
    :param region: Region to create the bucket in (default: us-east-1)
    :return: None
    """
    try:
        s3_client = boto3.client('s3', region_name=region)
        location = {'LocationConstraint': region}
        s3_client.create_bucket(Bucket=bucket_name,
                                CreateBucketConfiguration=location)
    except (BotoCoreError, ClientError) as error:
        logger.error(f"Failed to create bucket: {error}")
        sys.exit(1)

    logger.info(f"Bucket '{bucket_name}' created successfully in region '{region}'.")

if __name__ == "__main__":
    if len(sys.argv) != 2:
        logger.error("Usage: python create_s3_bucket.py <bucket-name>")
        sys.exit(1)

    create_s3_bucket(sys.argv[1])