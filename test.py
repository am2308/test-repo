#!/usr/bin/env python3
"""
Converted from shell: test.sh
Generated by MCP Multi-Language to Python Converter
"""

import os
import sys
import subprocess
import logging
from pathlib import Path
from typing import Optional, List, Dict, Any

# Setup logging
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

import os
import boto3
import logging
from botocore.exceptions import BotoCoreError, ClientError

# Set up logging
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def create_s3_bucket(bucket_name: str, region: str = "us-east-1") -> None:
    """
    Create an S3 bucket in a specified region

    :param bucket_name: Bucket to create
    :param region: String region to create bucket in, default is us-east-1
    :return: None
    """
    try:
        s3_client = boto3.client('s3', region_name=region)
        location = {'LocationConstraint': region}
        s3_client.create_bucket(Bucket=bucket_name,
                                CreateBucketConfiguration=location)
    except ClientError as e:
        logging.error(e)
        return False
    return True

def main():
    bucket_name = os.getenv('BUCKET_NAME')
    if not bucket_name:
        logger.error("Usage: BUCKET_NAME=<bucket-name> python create_s3_bucket.py")
        return

    if create_s3_bucket(bucket_name):
        logger.info(f"Bucket '{bucket_name}' created successfully in region 'us-east-1'.")
    else:
        logger.error("Failed to create bucket.")

if __name__ == "__main__":
    main()